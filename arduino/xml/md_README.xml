<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_README" kind="page">
    <compoundname>md_README</compoundname>
    <title>Arduino code</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This folder contains the code to be uploaded to the Arduino. <bold>Do not place code that should be run on the Jetson here!</bold></para>
<sect1 id="md_README_1autotoc_md1">
<title>Interfacing with the Arduino</title>
<para>The <computeroutput>arduino-cli</computeroutput> tool is needed to control upload to the Arduino from the commandline, and will be used to soft reset the Arduino when required.</para>
</sect1>
<sect1 id="md_README_1autotoc_md2">
<title>Installing &lt;tt&gt;arduino-cli&lt;/tt&gt;</title>
<para>The <computeroutput>arduino-cli</computeroutput> binary file is contained in the <computeroutput>docker</computeroutput> folder in the root of this project, and should be installed automatically when you start the Docker instance. Note that there are <bold>two</bold> versions present in the folder, one for x86 architecture and one for ARM architecture. The ARM one is used by default as the Jetson runs on ARM architecture. <bold>If your system uses x86</bold>, be sure to rename the <computeroutput>arduino-cli_x86</computeroutput> binary to <computeroutput>arduino-cli</computeroutput> so that the right version is installed.</para>
<para>If you are not using the Docker instance, you may alternatively refer to the <ulink url="https://arduino.github.io/arduino-cli/latest/installation/">installation steps</ulink> to install it. Remember to add the downloaded binary to your <ulink url="https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s04.html"><computeroutput>/bin</computeroutput> path</ulink>!</para>
<para>After installation, install the avr core and code dependencies:</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">arduino-cli<sp/>core<sp/>install<sp/>arduino:avr</highlight></codeline>
<codeline><highlight class="normal">arduino-cli<sp/>lib<sp/>install<sp/>SimpleSerialProtocol</highlight></codeline>
<codeline><highlight class="normal">arduino-cli<sp/>lib<sp/>install<sp/>Servo</highlight></codeline>
</programlisting></para>
<para>Compile the code. The header files in this directory may be included with the <computeroutput>--library</computeroutput> option:</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">arduino-cli<sp/>compile<sp/>--fqbn<sp/>arduino:avr:nano:cpu=atmega328old<sp/>--library<sp/>.<sp/>main/main.ino</highlight></codeline>
</programlisting></para>
<para>And upload it:</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">#<sp/>You<sp/>may<sp/>need<sp/>to<sp/>replace<sp/>/dev/ttyUSB0<sp/>with<sp/>the<sp/>right<sp/>serial<sp/>port</highlight></codeline>
<codeline><highlight class="normal">arduino-cli<sp/>upload<sp/>-p<sp/>/dev/arduino0<sp/>--fqbn<sp/>arduino:avr:nano:cpu=atmega328old<sp/>main/main.ino</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_README_1autotoc_md3">
<title>&lt;tt&gt;udev&lt;/tt&gt; rules</title>
<para>To make life easier, <computeroutput>udev</computeroutput> rules are used to assign fixed device nodes to the Arduino and IMU. As a result, these device names are hardcoded in the code.</para>
<para><computeroutput>/etc/udev/rules.d/99-arduino.rules</computeroutput>:</para>
<para><programlisting filename=".ru"><codeline><highlight class="normal">#<sp/>Detect<sp/>arduino<sp/>&amp;<sp/>assign<sp/>fixed<sp/>device<sp/>node.</highlight></codeline>
<codeline><highlight class="normal">ACTION==&quot;add&quot;,<sp/>ATTRS{idVendor}==&quot;1a86&quot;,<sp/>ATTRS{idProduct}==&quot;7523&quot;,<sp/>MODE=&quot;0666&quot;,<sp/>GROUP=&quot;dialout&quot;,<sp/>SYMLINK+=&quot;arduino0&quot;</highlight></codeline>
</programlisting></para>
<para><computeroutput>/etc/udev/rules.d/99-imu.rules</computeroutput>:</para>
<para><programlisting filename=".ru"><codeline><highlight class="normal">#<sp/>Detect<sp/>imu<sp/>&amp;<sp/>assign<sp/>fixed<sp/>device<sp/>node.</highlight></codeline>
<codeline><highlight class="normal">ACTION==&quot;add&quot;,<sp/>ATTRS{idVendor}==&quot;0403&quot;,<sp/>ATTRS{idProduct}==&quot;6001&quot;,<sp/>MODE=&quot;0666&quot;,<sp/>GROUP=&quot;dialout&quot;,<sp/>SYMLINK+=&quot;imu0&quot;</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_README_1autotoc_md4">
<title>Arduino-Jetson interface</title>
<para>The functions for interfacing with the Jetson are stored in the <computeroutput><ref refid="arduino__jetson__interface_8h_source" kindref="compound">arduino_jetson_interface.h</ref></computeroutput> header file. The <computeroutput>await_connection()</computeroutput> function should be called in <computeroutput>setup()</computeroutput>. </para>
</sect1>
    </detaileddescription>
    <location file="README.md"/>
  </compounddef>
</doxygen>
