# Refer to both vectornav/src/vectornav.cc and vnproglib-1.2.0.0/../types.h
# to have a chance at figuring this out.
vectornav:
  ros__parameters:
    # It's rumoured a lower baudrate is more stable to interference.
    # If its not working, try going to the highest baudrate, then go back down.
    # 921600 is the highest, 115200 is the default... and the minimum tested to
    # work if using CommonField=0x7FFF at 40Hz. Higher Hz needs higher baudrate.
    baud: 115200
    reconnect_ms: 500
    adjust_ros_timestamp: true
    # Reference vnproglib-1.2.0.0 headers for enum definitions
    # Async Output Type (ASCII)
    AsyncDataOutputType: 0           # VNOFF
    # Async output Frequency (Hz)
    AsyncDataOutputFrequency: 1
    # Sync control
    syncInMode: 3                    # SYNCINMODE_COUNT
    syncInEdge: 0                    # SYNCINEDGE_RISING
    syncInSkipFactor: 0
    syncOutMode: 0                   # SYNCOUTMODE_NONE
    syncOutPolarity: 0               # SYNCOUTPOLARITY_NEGATIVE
    syncOutSkipFactor: 0
    syncOutPulseWidth_ns: 100000000
    # Communication protocol control
    serialCount: 0                   # COUNTMODE_NONE
    serialStatus: 0                  # STATUSMODE_OFF
    spiCount: 0                      # COUNTMODE_NONE
    spiStatus: 0                     # STATUSMODE_OFF
    serialChecksum: 1                # CHECKSUMMODE_CHECKSUM
    spiChecksum: 0                   # CHECKSUMMODE_OFF
    errorMode: 0                     # ERRORMODE_IGNORE
    # Binary output register 1
    BO1:
      asyncMode: 1                   # ASYNCMODE_PORT1
      rateDivisor: 10                # 80 Hz
      # Enable all: 0x7FFF
      # Enable only what VN-100 has: 0x2f3d
      # Enable what is useful: 0x0138
      # Enable the bare min: 0x0111
      commonField: 0x0111
      timeField: 0x0000              # TIMEGROUP_NONE
      imuField: 0x0000               # IMUGROUP_NONE
      # set gpsField directly in source to enforce or condition
      attitudeField: 0x0000          # ATTITUDEGROUP_NONE
      # set insField directly in source to enforce or condition
      gps2Field: 0x0000              # GPSGROUP_NONE
    # Binary output register 2
    BO2:
      asyncMode: 0                   # ASYNCMODE_NONE
      rateDivisor: 0
      commonField: 0x0000            # COMMONGROUP_NONE
      timeField: 0x0000              # TIMEGROUP_NONE
      imuField: 0x0000               # IMUGROUP_NONE
      gpsField: 0x0000               # GPSGROUP_NONE
      attitudeField: 0x0000          # ATTITUDEGROUP_NONE
      insField: 0x0000               # INSGROUP_NONE
      gps2Field: 0x0000              # GPSGROUP_NONE
    # Binary output register 3
    BO3:
      asyncMode: 0                   # ASYNCMODE_NONE
      rateDivisor: 0
      commonField: 0x0000            # COMMONGROUP_NONE
      timeField: 0x0000              # TIMEGROUP_NONE
      imuField: 0x0000               # IMUGROUP_NONE
      gpsField: 0x0000               # GPSGROUP_NONE
      attitudeField: 0x0000          # ATTITUDEGROUP_NONE
      insField: 0x0000               # INSGROUP_NONE
      gps2Field: 0x0000              # GPSGROUP_NONE
    frame_id: "vectornav"

vn_sensor_msgs:
  ros__parameters:
    use_enu: true
    orientation_covariance: [0.01,   0.00,   0.00,
                             0.00,   0.01,   0.00,
                             0.00,   0.00,   0.01,]
    angular_velocity_covariance: [0.01,   0.00,   0.00,
                                  0.00,   0.01,   0.00,
                                  0.00,   0.00,   0.01,]
    linear_acceleration_covariance: [0.01,   0.00,   0.00,
                                     0.00,   0.01,   0.00,
                                     0.00,   0.00,   0.01,]
    magnetic_covariance: [0.01,   0.00,   0.00,
                          0.00,   0.01,   0.00,
                          0.00,   0.00,   0.01,]
