// Format details: https://aka.ms/devcontainer.json
// Custom Dockerfile: https://containers.dev/guide/dockerfile
{
  "name": "Blobfish Dev",

  // https://github.com/devcontainers/templates/tree/main/src/ubuntu
  "image": "mcr.microsoft.com/devcontainers/base:jammy",

  // https://containers.dev/features
  "features": {},

  // Use 'forwardPorts' to automatically forward parts.
  "forwardPorts": [],

  "customizations": {
    "vscode": {
      "extensions": [
        // ROS support for VS Code.
        "ms-iot.vscode-ros",
        // CMake syntax highlighting.
        "twxs.cmake",
        // All-in-one Python type-checking, linter & formatter.
        "charliermarsh.ruff",
        // Snippet generator for Python docstrings.
        "njpwerner.autodocstring"
      ]
    }
  },

  "hostRequirements": { "gpu": "optional" },

  // Mount package caches.
  "mounts": [
    {
      "type": "volume",
      "source": "pip-cache",
      "target": "/home/vscode/.cache/pip"
    },
    {
      "type": "volume",
      "source": "pip-cache",
      "target": "/root/.cache/pip"
    },
    {
      "type": "volume",
      "source": "apt-cache",
      "target": "/var/cache/apt"
    },
    {
      "type": "volume",
      "source": "apt-list-cache",
      "target": "/var/lib/apt"
    },
    // Comment out below as Linux isn't WSL.
    // Still waiting on conditional mounts: https://github.com/devcontainers/spec/issues/132
    {
      "type": "bind",
      "source": "/usr/lib/wsl",
      "target": "/usr/lib/wsl"
    },
    // Access host devices within devcontainer.
    {
      "type": "bind",
      "source": "/dev",
      "target": "/dev"
    },
    // GUI forwarding on Linux (X11/XWayland), no impact on WSL.
    // {
    //   "type": "bind",
    //   "source": "/tmp/.X11-unix",
    //   "target": "/tmp/.X11-unix"
    // }
    // Cursed WSL2 Setup.
    // See: https://stackoverflow.com/questions/73092750/how-to-show-gui-apps-from-docker-desktop-container-on-windows-11/73901260
    {
      "type": "bind",
      "source": "/run/desktop/mnt/host/wslg/.X11-unix",
      "target": "/tmp/.X11-unix"
    },
    {
      "type": "bind",
      "source": "/run/desktop/mnt/host/wslg",
      "target": "/mnt/wslg"
    }
  ],

  "runArgs": [
    "--shm-size=32G",
    // We add groups via `--group-add` manually as `updateRemoteUserUID` is dumb and
    // refuses to work if host groups already exist in the container image.
    // See my feat request to fix this: https://github.com/microsoft/vscode-remote-release/issues/10384
    "--group-add=video",
    // Docker's GPU logic doesn't mount Nvidia's graphics drivers, just the compute
    // device. nvidia-container-runtime + NVIDIA_DRIVER_CAPABILITIES is needed to
    // access Nvidia accelerated graphics within a container.
    "--runtime=nvidia"
  ],
  // "privileged": true,
  // "shutdownAction": "none",

  "remoteEnv": {
    // GUI forwarding (X11/XWayland/WSLg).
    // Should be ${localEnv:DISPLAY}, but its "1" on WSLg when it should be ":0".
    // Since its almost always ":0" regardless of display server, hardcode it.
    "DISPLAY": ":0"
  },

  "containerEnv": {
    // https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/docker-specialized.html#driver-capabilities
    "NVIDIA_DRIVER_CAPABILITIES": "all",
    "XDG_RUNTIME_DIR": "/mnt/wslg/runtime-dir"
  },

  // See: https://containers.dev/implementors/json_reference/#lifecycle-scripts
  "postCreateCommand": ".devcontainer/hooks/postCreate.sh",
  "postStartCommand": ".devcontainer/hooks/postStart.sh"
}
