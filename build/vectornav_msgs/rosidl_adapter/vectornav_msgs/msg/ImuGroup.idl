// generated from rosidl_adapter/resource/msg.idl.em
// with input from vectornav_msgs/msg/ImuGroup.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module vectornav_msgs {
  module msg {
    module ImuGroup_Constants {
      const uint16 IMUGROUP_IMUSTATUS = 1;
      const uint16 IMUGROUP_UNCOMPMAG = 2;
      const uint16 IMUGROUP_UNCOMPACCEL = 4;
      const uint16 IMUGROUP_UNCOMPGYRO = 8;
      const uint16 IMUGROUP_TEMP = 16;
      const uint16 IMUGROUP_PRES = 32;
      const uint16 IMUGROUP_DELTATHETA = 64;
      const uint16 IMUGROUP_DELTAVEL = 128;
      const uint16 IMUGROUP_MAG = 256;
      const uint16 IMUGROUP_ACCEL = 512;
      const uint16 IMUGROUP_ANGULARRATE = 1024;
      const uint16 IMUGROUP_SENSSAT = 2048;
    };
    @verbatim (language="comment", text=
      "VectorNav Composite Data Packet" "\n"
      "" "\n"
      "Only the enabled fields will be populated with data and only the fields" "\n"
      "you require for your application should be enabled to conserve bandwidth" "\n"
      "and increase the update rate." "\n"
      "" "\n"
      "TODO Requires rosidl patches")
    struct ImuGroup {
      @verbatim (language="comment", text=
        "Data Received (ROS Time)")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Field Enable Bits")
      uint16 group_fields;

      @verbatim (language="comment", text=
        "TODO SENSSAT exists in the header, but not the manual..." "\n"
        "Fields")
      @unit (value="Dereck")
      uint16 imustatus;

      geometry_msgs::msg::Vector3 uncompmag;

      geometry_msgs::msg::Vector3 uncompaccel;

      geometry_msgs::msg::Vector3 uncompgyro;

      float temp;

      float pres;

      float deltatheta_time;

      geometry_msgs::msg::Vector3 deltatheta_dtheta;

      geometry_msgs::msg::Vector3 deltavel;

      geometry_msgs::msg::Vector3 mag;

      geometry_msgs::msg::Vector3 accel;

      geometry_msgs::msg::Vector3 angularrate;

      uint16 sensat;
    };
  };
};
