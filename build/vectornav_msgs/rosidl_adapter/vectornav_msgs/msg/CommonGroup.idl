// generated from rosidl_adapter/resource/msg.idl.em
// with input from vectornav_msgs/msg/CommonGroup.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Quaternion.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"
#include "vectornav_msgs/msg/InsStatus.idl"

module vectornav_msgs {
  module msg {
    module CommonGroup_Constants {
      const uint16 COMMONGROUP_TIMESTARTUP = 1;
      const uint16 COMMONGROUP_TIMEGPS = 2;
      const uint16 COMMONGROUP_TIMESYNCIN = 4;
      const uint16 COMMONGROUP_YAWPITCHROLL = 8;
      const uint16 COMMONGROUP_QUATERNION = 16;
      const uint16 COMMONGROUP_ANGULARRATE = 32;
      const uint16 COMMONGROUP_POSITION = 64;
      const uint16 COMMONGROUP_VELOCITY = 128;
      const uint16 COMMONGROUP_ACCEL = 256;
      const uint16 COMMONGROUP_IMU = 512;
      const uint16 COMMONGROUP_MAGPRES = 1024;
      const uint16 COMMONGROUP_DELTATHETA = 2048;
      const uint16 COMMONGROUP_INSSTATUS = 4096;
      const uint16 COMMONGROUP_SYNCINCNT = 8192;
      const uint16 COMMONGROUP_TIMEGPSPPS = 16384;
    };
    @verbatim (language="comment", text=
      "VectorNav Composite Data Packet" "\n"
      "" "\n"
      "Only the enabled fields will be populated with data and only the fields" "\n"
      "you require for your application should be enabled to conserve bandwidth" "\n"
      "and increase the update rate." "\n"
      "" "\n"
      "TODO Requires rosidl patches")
    struct CommonGroup {
      @verbatim (language="comment", text=
        "Data Received (ROS Time)")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Field Enable Bits")
      uint16 group_fields;

      @verbatim (language="comment", text=
        "Common")
      uint64 timestartup;

      uint64 timegps;

      uint64 timesyncin;

      geometry_msgs::msg::Vector3 yawpitchroll;

      geometry_msgs::msg::Quaternion quaternion;

      geometry_msgs::msg::Vector3 angularrate;

      geometry_msgs::msg::Point position;

      geometry_msgs::msg::Vector3 velocity;

      geometry_msgs::msg::Vector3 accel;

      geometry_msgs::msg::Vector3 imu_accel;

      geometry_msgs::msg::Vector3 imu_rate;

      geometry_msgs::msg::Vector3 magpres_mag;

      float magpres_temp;

      float magpres_pres;

      float deltatheta_dtime;

      geometry_msgs::msg::Vector3 deltatheta_dtheta;

      geometry_msgs::msg::Vector3 deltatheta_dvel;

      vectornav_msgs::msg::InsStatus insstatus;

      uint32 syncincnt;

      uint16 timegpspps;
    };
  };
};
