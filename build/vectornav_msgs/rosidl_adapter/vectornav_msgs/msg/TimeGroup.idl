// generated from rosidl_adapter/resource/msg.idl.em
// with input from vectornav_msgs/msg/TimeGroup.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"
#include "vectornav_msgs/msg/TimeStatus.idl"
#include "vectornav_msgs/msg/TimeUTC.idl"

module vectornav_msgs {
  module msg {
    module TimeGroup_Constants {
      const uint16 TIMEGROUP_TIMESTARTUP = 1;
      const uint16 TIMEGROUP_TIMEGPS = 2;
      const uint16 TIMEGROUP_GPSTOW = 4;
      const uint16 TIMEGROUP_GPSWEEK = 8;
      const uint16 TIMEGROUP_TIMESYNCIN = 16;
      const uint16 TIMEGROUP_TIMEGPSPPS = 32;
      const uint16 TIMEGROUP_TIMEUTC = 64;
      const uint16 TIMEGROUP_SYNCINCNT = 128;
      const uint16 TIMEGROUP_SYNCOUTCNT = 256;
      const uint16 TIMEGROUP_TIMESTATUS = 512;
    };
    @verbatim (language="comment", text=
      "VectorNav Composite Data Packet" "\n"
      "" "\n"
      "Only the enabled fields will be populated with data and only the fields" "\n"
      "you require for your application should be enabled to conserve bandwidth" "\n"
      "and increase the update rate." "\n"
      "" "\n"
      "TODO Requires rosidl patches")
    struct TimeGroup {
      @verbatim (language="comment", text=
        "Data Received (ROS Time)")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Field Enable Bits")
      uint16 group_fields;

      @verbatim (language="comment", text=
        "Fields")
      uint64 timestartup;

      uint64 timegps;

      uint64 gpstow;

      uint16 gpsweek;

      uint64 timesyncin;

      uint64 timegpspps;

      vectornav_msgs::msg::TimeUTC timeutc;

      uint32 syncincnt;

      uint32 syncoutcnt;

      vectornav_msgs::msg::TimeStatus timestatus;
    };
  };
};
